image: docker:latest
services:
  - docker:19-dind

variables:
  DOCKER_REGISTRY: 926377470665.dkr.ecr.us-east-2.amazonaws.com
  AWS_DEFAULT_REGION: us-east-2
  APP_NAME: spring-boot
  DOCKER_DRIVER: overlay2
  DOCKER_TLS_CERTDIR: ""
  SPRING_PROFILES_ACTIVE: gitlab-ci
  IMAGE_TAG:  $DOCKER_REGISTRY/$APP_NAME:$CI_COMMIT_SHORT_SHA-$CI_CONCURRENT_PROJECT_ID

stages:
  - build
  - test
  - package
  - push
  - deploy

    # maven-build:
    #   image: maven:3-jdk-11
    #   stage: build
    #   script: "mvn package -B"
    #   artifacts:
    #     paths:
    #       - target/*.jar

    # maven-test:
    #   image: maven:3-jdk-11
    #   stage: test
    #   script: "mvn test"
    #   artifacts:
    #     paths:
    #       - target/*.jar

    # publish:
    #   stage: push
    #   before_script:
    #     - echo "enabling configuration"
    #     - apk add --no-cache curl jq python3 py3-pip
    #     - pip install awscli
    #     - aws ecr get-login-password | docker login --username AWS --password-stdin $DOCKER_REGISTRY
    #     - aws --version
    #     - docker info
    #     - docker --version

#   script:
#     - docker build -t $IMAGE_TAG .
#     #- docker tag $APP_NAME:$CI_COMMIT_SHA $DOCKER_REGISTRY/$APP_NAME:$CI_COMMIT_SHA
#     - docker push $IMAGE_TAG


deploy:
  stage: deploy
  image: dtzar/helm-kubectl
  script:
    - echo "Deploying to tt-k8s, Welcome"
    - kubectl config set-cluster k8s --server="${SERVER}"
    - kubectl config set clusters.k8s.certificate-authority-data ${CERTIFICATE_AUTHORITY_DATA}
    - kubectl config set-credentials gitlab --token="${USER_TOKEN}"
    - kubectl config set-context default --cluster=k8s --user=gitlab
    - kubectl config use-context default
    - ls K8s
    - kubectl apply -f K8s/springboot-deployment.yaml

  only:
    - master
